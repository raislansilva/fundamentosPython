criar uma venv = python3 -m venv venv  /  ativar na pasta venv/bin/activate
instalar o django = pip install django
Criar um projeto =  django-admin startproject nomeProjeto .
Criar uma app no django = python manage.py startapp nomeapp /passo seguinte registrar o nome da app no arquivo settings em installed_apps
criar um banco de dados = python manage.py migrate
rodar a aplicação = python manage.py runserver
criar super usuário = python manage.py createsuperuser
Criar um model = python manage.py makemigrations //para gravar a model de que usar o comando python manage.py migrate
pip install djangorestframework

tutorial docker-django = http://marcusalmeida.github.io/2016/desenvolvendo-com-django-docker-compose/
https://docs.docker.com/compose/django/

https://woliveiras.com.br/posts/imagem-docker-ou-um-container-docker/

https://jtemporal.com/subindo-imagens-docker-pro-dockerhub/

commit = docker commit 9c09acd48a25 fedora-base-with-git


//template django
https://pythonacademy.com.br/blog/desenvolvimento-web-com-python-e-django-template

https://medium.com/trainingcenter/docker-dockerhub-pull-e-push-nas-suas-imagens-57dffa0232ad

https://wsvincent.com/django-user-authentication-tutorial-login-and-logout/

https://wsvincent.com/django-custom-user-model-tutorial/

https://simpleisbetterthancomplex.com/article/2017/08/19/how-to-render-django-form-manually.html

//projeto-django
https://developer.mozilla.org/en-US/docs/Learn/Server-side/Django/Generic_views
https://github.com/mdn/django-locallibrary-tutorial


//postgres
psql:FATAL: role user does not exist
https://github.com/PostgresApp/PostgresApp/issues/313
CREATE USER usro1 WITH PASSWORD ‘senhasegura‘;

//comandos básicos
http://jquerydicas.blogspot.com/2013/10/exibir-uma-lista-das-tabelas-de-um.html
https://www.lucascaton.com.br/2010/05/23/resumo-de-comandos-uteis-do-postgresql/
https://byclaudio.wordpress.com/2012/05/02/postgresql-criar-um-super-usuario/

https://www.extjs-tutorial.com/extjs/sencha-cmd


// django models validate
class Meta:
        unique_together = ('first_name', 'last_name')
        ordering = ['last_name', 'first_name']


    def unique_error_message(self, model_class, unique_check):
        if model_class == type(self) and unique_check == ('first_name', 'last_name'):
            raise Exception("erro de validação")
        else:
            return super(Author, self).unique_error_message(model_class, unique_check)      


    #def validate(self):
    
        #value = Author.objects.filter(first_name='raislan').count()
        #ident = Author.objects.filter(id=self.pk,first_name="raislan")

        #if self.pk and value >=3 and self.first_name == "raislan" and not ident:
            #raise Exception(u'erro de validação')
        #elif not self.pk and value >=3 and self.first_name == "raislan":       
            #raise Exception(u'erro de validação')
        #return False

    def save(self, *args, **kargs):
        #self.validate()
        super(Author, self).save(*args, **kargs)


    'qtd = Configuration.max_ticket_at('2017-05-10')
        
        value = Author.objects.filter(first_name='raislan').count()
        ident = Author.objects.filter(id=self.pk,first_name="raislan")

        if qtd != None:
            if self.pk and value >=qtd and self.first_name == "raislan" and not ident:
                raise Exception(u'erro de validação merda')
            elif not self.pk and value >=qtd and self.first_name == "raislan":       
                raise Exception(u'erro de validação caralho')
            return False'
        
        
 def validate(self):
        if not self.authorized:
            raise self.TicketErro()
        return True       

https://medium.com/@beatrizuezu/visualizando-query-sql-a-partir-do-orm-django-

//get_or_create 
def save(self, *args, **kargs):
        self.editora, created = Editora.objects.get_or_create(name="veja")
        super(Author, self).save(*args, **kargs)
        
        

Solicito a inclusão no sistema SIMP no campo destinatário o Ministério Público do Estado do Maranhão para realizar encaminhamento a órgão externo de protocolo.

select b.title,b.current_round,u.name from bettings b inner join users u on b.user_id = u.id;

